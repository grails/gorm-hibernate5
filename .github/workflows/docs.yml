name: Publish Docs
on:
  workflow_dispatch:
    inputs:
      ref:
        description: 'The Tag or Branch Name'
        required: true
jobs:
  docs:
    runs-on: ubuntu-latest
    env:
      GIT_USER_NAME: 'grails-build'
      GIT_USER_EMAIL: 'grails-build@users.noreply.github.com'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN }}
          ref: ${{github.event.inputs.ref}}
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
      - name: Publish Documentation
        id: docs
        uses: gradle/gradle-build-action@v3
        env:
          GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
          GRADLE_ENTERPRISE_BUILD_CACHE_NODE_USER: ${{ secrets.GRADLE_ENTERPRISE_BUILD_CACHE_NODE_USER }}
          GRADLE_ENTERPRISE_BUILD_CACHE_NODE_KEY: ${{ secrets.GRADLE_ENTERPRISE_BUILD_CACHE_NODE_KEY }}
        with:
          arguments: docs:docs
      - name: Determine docs target repository
        if: success()
        uses: haya14busa/action-cond@v1
        id: docs_target
        with:
          cond: ${{ github.repository == 'grails/gorm-hibernate5' }}
          if_true: "grails/grails-data-mapping"
          if_false: ${{ github.repository }}
      - name: Publish to Github Pages
        if: success()
        uses: micronaut-projects/github-pages-deploy-action@grails
        env:
          SKIP_LATEST: ${{ contains(steps.release_version.outputs.release_version, 'M') }}
          TARGET_REPOSITORY: ${{ steps.docs_target.outputs.value }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          BRANCH: gh-pages
          FOLDER: docs/build/docs
          DOC_SUB_FOLDER: hibernate
          DOC_FOLDER: gh-pages
          COMMIT_EMAIL: 'grails-build@users.noreply.github.com'
          COMMIT_NAME: 'grails-build'
          VERSION: ${{ steps.release_version.outputs.release_version }}