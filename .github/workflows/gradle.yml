name: Java CI
on:
  push:
    branches:
      - '[7-9]+.[0-9]+.x'
  pull_request:
    branches:
      - '[7-9]+.[0-9]+.x'
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      WORKSPACE: ${{ github.workspace }}
      GRADLE_OPTS: -Xmx1500m -Dfile.encoding=UTF-8
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: '11'
      - name: Run Build
        id: build
        uses: gradle/gradle-build-action@v2
        env:
          GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
          GRADLE_ENTERPRISE_BUILD_CACHE_NODE_USER: ${{ secrets.GRADLE_ENTERPRISE_BUILD_CACHE_NODE_USER }}
          GRADLE_ENTERPRISE_BUILD_CACHE_NODE_KEY: ${{ secrets.GRADLE_ENTERPRISE_BUILD_CACHE_NODE_KEY }}
        with:
          arguments: build -Dgeb.env=chromeHeadless
  publish:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: ['build']
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: '11'
      - name: Publish Artifacts To Grails Artifactory (repo.grails.org)
        uses: gradle/gradle-build-action@v2
        env:
          GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
          GRADLE_ENTERPRISE_BUILD_CACHE_NODE_USER: ${{ secrets.GRADLE_ENTERPRISE_BUILD_CACHE_NODE_USER }}
          GRADLE_ENTERPRISE_BUILD_CACHE_NODE_KEY: ${{ secrets.GRADLE_ENTERPRISE_BUILD_CACHE_NODE_KEY }}
          ARTIFACTORY_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
          ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
        with:
          arguments: -Dorg.gradle.internal.publish.checksums.insecure=true publish
      - name: Build Docs
        if: success()
        uses: gradle/gradle-build-action@v2
        env:
          GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
          GRADLE_ENTERPRISE_BUILD_CACHE_NODE_USER: ${{ secrets.GRADLE_ENTERPRISE_BUILD_CACHE_NODE_USER }}
          GRADLE_ENTERPRISE_BUILD_CACHE_NODE_KEY: ${{ secrets.GRADLE_ENTERPRISE_BUILD_CACHE_NODE_KEY }}
        with:
          arguments: docs:docs
      - name: Determine docs target repository
        if: success()
        uses: haya14busa/action-cond@v1
        id: docs_target
        with:
          cond: ${{ github.repository == 'grails/gorm-hibernate5' }}
          if_true: "grails/grails-data-mapping"
          if_false: ${{ github.repository }}
      - name: Publish to Github Pages
        if: success()
        uses: micronaut-projects/github-pages-deploy-action@grails
        env:
          SKIP_SNAPSHOT: ${{ contains(steps.release_version.outputs.release_version, 'M') }}
          TARGET_REPOSITORY: ${{ steps.docs_target.outputs.value }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          BRANCH: gh-pages
          FOLDER: docs/build/docs
          DOC_SUB_FOLDER: hibernate
          DOC_FOLDER: gh-pages
          COMMIT_EMAIL: behlp@objectcomputing.com
          COMMIT_NAME: Puneet Behl