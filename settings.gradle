plugins {
    id "com.gradle.enterprise" version "3.17.1"
    id 'com.gradle.common-custom-user-data-gradle-plugin' version '2.0'
}

gradleEnterprise {
    server = 'https://ge.grails.org'
    buildScan {
        publishAlwaysIf(System.getenv('CI') == 'true')
        publishIfAuthenticated()
        uploadInBackground = System.getenv("CI") == null
        capture {
            taskInputFiles = true
        }
    }

}

buildCache {
    local { enabled = System.getenv('CI') != 'true' }
    remote(gradleEnterprise.buildCache) {
        def isAuthenticated = System.getenv('GRADLE_ENTERPRISE_ACCESS_KEY')
        push = System.getenv('CI') == 'true' && isAuthenticated
        enabled = true
    }
}


// Core
include "grails-datastore-gorm-hibernate5"

// Documentation
include 'docs'

// Plugins
include "boot-plugin"
include 'grails-plugin'

include "examples-grails3-hibernate5"
project(":examples-grails3-hibernate5").projectDir = new File(settingsDir, "examples/grails3-hibernate5")

include "examples-grails3-multiple-datasources"
project(":examples-grails3-multiple-datasources").projectDir = new File(settingsDir, "examples/grails3-multiple-datasources")

include "examples-grails3-database-per-tenant"
project(":examples-grails3-database-per-tenant").projectDir = new File(settingsDir, "examples/grails3-database-per-tenant")

include "examples-grails3-schema-per-tenant"
project(":examples-grails3-schema-per-tenant").projectDir = new File(settingsDir, "examples/grails3-schema-per-tenant")

include "examples-grails3-partitioned-multi-tenancy"
project(":examples-grails3-partitioned-multi-tenancy").projectDir = new File(settingsDir, "examples/grails3-partitioned-multi-tenancy")

include "examples-standalone-hibernate5"
project(":examples-standalone-hibernate5").projectDir = new File(settingsDir, "examples/standalone-hibernate5")

include "examples-spring-boot-hibernate5"
project(":examples-spring-boot-hibernate5").projectDir = new File(settingsDir, "examples/spring-boot-hibernate5")

// TODO: General error during canonicalization: No signature of method: org.codehaus.groovy.ast.ClassCodeExpressionTransformer.transform() is applicable for argument types: (org.codehaus.groovy.ast.expr.MethodCallExpression) values: [org.codehaus.groovy.ast.expr.MethodCallExpression@776b49b2[object: org.codehaus.groovy.ast.expr.VariableExpression@30b9eadd[variable: response] method: org.codehaus.groovy.ast.expr.ConstantExpression@497570fb[status] arguments: org.codehaus.groovy.ast.expr.ArgumentListExpression@412c995d[org.codehaus.groovy.ast.expr.PropertyExpression@3249a1ce[object: org.codehaus.groovy.ast.expr.ClassExpression@4dd94a58[type: org.springframework.http.HttpStatus] property: org.codehaus.groovy.ast.expr.ConstantExpression@2f4919b0[UNPROCESSABLE_ENTITY]]]]]
//include "examples-grails-data-service"
//project(":examples-grails-data-service").projectDir = new File(settingsDir, "examples/grails-data-service")

include "examples-grails-hibernate-groovy-proxy"
project(":examples-grails-hibernate-groovy-proxy").projectDir = new File(settingsDir, "examples/grails-hibernate-groovy-proxy")

findProject(':boot-plugin').name = 'gorm-hibernate5-spring-boot'

