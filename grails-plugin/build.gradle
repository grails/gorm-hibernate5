configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        if(details.requested.group == 'org.grails' &&
                details.requested.name.startsWith('grails-datastore') &&
                details.requested.name != 'grails-datastore-gorm-hibernate5') {
            details.useVersion(gormVersion)
        }
        if(details.requested.group == 'org.springframework') {
            details.useVersion(springVersion)
        }
    }
}

dependencies {
    documentation ("org.grails:grails-core:$grailsVersion")
    documentation ("org.grails:grails-bootstrap:$grailsVersion")
    documentation ("org.grails:grails-spring:$grailsVersion")
    documentation ("com.github.javaparser:javaparser-core:$javaParserCoreVersion")

    compileOnly("org.grails:grails-bootstrap:$grailsVersion")
    compileOnly("org.grails:grails-core:$grailsVersion")
    compileOnly "org.spockframework:spock-core:$spockVersion", {
        exclude group: "junit", module: "junit-dep"
        exclude group: 'org.codehaus.groovy', module: 'groovy-all'
        exclude group: 'org.hamcrest', module: 'hamcrest-core'
    }

    api "org.springframework.boot:spring-boot:$springBootVersion"
    api "org.springframework:spring-orm:$springVersion"
    api "org.hibernate:hibernate-core-jakarta:${hibernate5Version}"
    api "org.hibernate:hibernate-ehcache:$hibernate5Version"
    api "org.grails:grails-datastore-web:$gormVersion"
    api "org.grails:grails-datastore-gorm-support:$gormVersion"
    api project(":grails-datastore-gorm-hibernate5"), {
        exclude group:'org.springframework', module:'spring-context'
        exclude group:'org.springframework', module:'spring-core'
        exclude group:'org.springframework', module:'spring-beans'
        exclude group:'org.springframework', module:'spring-tx'
        exclude group:'org.grails', module:'grails-bootstrap'
        exclude group:'org.codehaus.groovy', module:'groovy-all'
        exclude group:'org.grails', module:'grails-core'
        exclude group:'javax.transaction', module:'jta'
    }
    testRuntimeOnly "org.yaml:snakeyaml:$snakeyamlVersion"
    testImplementation "org.grails:grails-gorm-testing-support:$testingSupportVersion"
    testRuntimeOnly "com.h2database:h2:$h2Version"
    testRuntimeOnly "org.apache.tomcat:tomcat-jdbc:$tomcatVersion"
    testRuntimeOnly "org.apache.tomcat.embed:tomcat-embed-logging-log4j:$tomcatLog4jVersion"
    testRuntimeOnly "org.springframework:spring-aop:$springVersion"
    testRuntimeOnly "org.springframework:spring-expression:$springVersion"
}

groovydoc.classpath += configurations.documentation
